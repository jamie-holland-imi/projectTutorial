name: C CI Docker Makefile

on:
  push:
    branches:
      - 'main'
      - 'dev'
  pull_request:
    branches:
      - 'main'
      - 'dev'
      
# Define the image tag
# ${{ github.repository }} repository name
env:
  DOCKER_IMAGE: ${{github.actor}}/gitdocker:latest

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
    - name: checkout repository
      uses: actions/checkout@v3
  
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag $DOCKER_IMAGE
    #- name: Build the Docker container
      #run: |
        #docker run -t docker.io/$DOCKER_IMAGE
        #ls
      #run: docker run --rm docker.io/$IMAGE_NAME
    #- name: Extract files from Docker Image
      #uses: shrink/actions-docker-extract@v2
      #id: extract
      #with:
        #image: docker.io/$IMAGE_NAME
        #path: "Build/stm32_executable.elf"        
    
  compile:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Create a temporary artifact file downloads folder
        run: mkdir ${{ runner.temp }}/build_files
        
      - name: docker build push action
        uses: docker/build-push-action@v4
        with:
          tags: jamie-holland-imi/gitdocker:latest
          push: false
      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        with:
            image: jamie-holland-imi/gitdocker:latest
            options: -v ${{ github.workspace }}:/var/www
            run: |
              make
              ls
              #cd file_downloads
              cp -f stm32_executable.elf ${{ runner.temp }}/build_files
              #echo 'stm32_executable.elf' > stm32_executable.elf
              #cd ..
              
      - name: Run LS in Build
        run: ls
        working-directory: /
        
      - name: Upload Elf and Hex file from Docker Image
        uses: actions/upload-artifact@v3
        with:
          name: BuildFiles
          path: ${{ runner.temp }}/build_files
          retention-days: 1
