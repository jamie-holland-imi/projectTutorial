name: C CI Docker Makefile

on:
  push:
    branches:
      - 'main'
      - 'dev'
      - 'dev2'
  pull_request:
    branches:
      - 'main'
      - 'dev'
      - 'dev2'
  workflow_dispatch:
  
# Define the image tag
# ${{ github.repository }} repository name
env:
  DOCKER_IMAGE: jamie-holland-imi/gitdocker:latest
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: ghcr.io/jamie-holland-imi/project-name:latest

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
    - name: checkout repository
      uses: actions/checkout@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --tag $IMAGE_TAG
        docker run $IMAGE_TAG
        docker push $IMAGE_TAG

    #- name: Build the Docker container
      #run: |
        #docker run --rm docker.io/$DOCKER_IMAGE
        #make
        #ls
    #- name: Extract files from Docker Image
      #uses: shrink/actions-docker-extract@v2
      #id: extract
      #with:
        #image: docker.io/$IMAGE_NAME
        #path: "Build/stm32_executable.elf"        
    
  compile:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/jamie-holland-imi/project-name:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        
      - name: Build
        shell: bash
        run: |
          make
          ls
      - name: Publish
        shell: bash
        run: |
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          for f in $(find src -name '*.elf'); do
            d=$(dirname  $f)
            outputFolder=${{ env.GITHUB_WORKSPACE }}/${{ env.ARTIFACT }}/$d
            ( cd "$d" && dotnet publish --no-self-contained -c $BUILD_CONFIGURATION -o $outputFolder )
          done
      - name: Publish artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.ARTIFACT }}-v${{ github.run_number }}
          retention-days: 1
          path: ${{ env.GITHUB_WORKSPACE }}/${{ env.ARTIFACT }}/src
          if-no-files-found: error
#      - name: Create a temporary artifact file downloads folder
#        run: mkdir -p "${{ runner.temp }}/build_files"        
#      - name: docker build push action
#        uses: docker/build-push-action@v4
#        with:
#          tags: docker.io/$DOCKER_IMAGE
#          push: false
#      - name: Run the makefile with Docker
#        uses: addnab/docker-run-action@v3
#        with:
#            image: docker.io/$DOCKER_IMAGE
#            options: -v ${{ github.workspace }}:/var/www
#            run: |
#              make
#              ls
#              pwd
#              docker cp jamie-holland-imi/gitdocker:latest:/src/. stm32_executable.elf
#              copy -p stm32_executable.elf > "${{ runner.temp }}/build_files"
              
      - name: Run LS
        run: |
          ls
          pwd
        #working-directory: /
      #- run: docker cp jamie-holland-imi/gitdocker:latest:/src/. stm32_executable.elf
#      - name: Upload Elf and Hex file from Docker Image
#        uses: actions/upload-artifact@v3.1.2
#        with:
#          name: BuildFiles
#          path: ${{ runner.temp }}/build_files
#          retention-days: 1
