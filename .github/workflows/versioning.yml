name: Versioning

on:
  push:
    branches:
      - 'versioning'
  pull_request:
    branches:
      - 'versioning'
  workflow_dispatch:
  
# The IMAGE_TAG sets the docker image name, it must be lowercase the ,, convert to lowercase
env:
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.event.repository.name }}
  USER_NAME: ${{ github.actor }}
  ORG_NAME: ${{ github.repository_owner }}
  VERSION: "latest"
  IMAGE_TAG: ${REGISTRY,,}"/"${ORG_NAME,,}"/"${REPO_NAME,,}":"${VERSION,,}

jobs:
  versioning:
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: Semantic Versioning
      uses: paulhatch/semantic-version@v5.3.0
      with:
        tag_prefix: "v"
        # A string which, if present in a git commit, indicates that a change represents a
        # major (breaking) change, supports regular expressions wrapped with '/'
        major_pattern: "(MAJOR)"
        major_regexp_flags: ""
        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "(MINOR)"
        minor_regexp_flags: ""
        # A string to determine the format of the version output
        version_format: "${tag_prefix}${major}.${minor}.${patch}-prerelease${increment}"
        # Optional path to check for changes. If any changes are detected in the path the
        # 'changed' output will true. Enter multiple paths separated by spaces.
        change_path: "Core/Src/"
        # Named version, will be used as suffix for name version tag
        namespace: my-service
        # If this is set to true, *every* commit will be treated as a new version.
        bump_each_commit: false
        # If bump_each_commit is also set to true, setting this value will cause the version to increment only if the pattern specified is matched.
        bump_each_commit_patch_pattern: ""
        # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
        search_commit_body: false
        # The output method used to generate list of users, 'csv' or 'json'.
        user_format_type: "csv"
        # Prevents pre-v1.0.0 version from automatically incrementing the major version.
        # If enabled, when the major version is 0, major releases will be treated as minor and minor as patch. Note that the version_type output is unchanged.
        enable_prerelease_mode: true
        # If enabled, diagnostic information will be added to the action output.
        debug: false
