name: CI Github Actions Workflow

on:
  push:
    branches:
      - 'main'
      - 'dev'
      - 'release/*'
      - '.github/workflows/ci-workflow.yml'
  pull_request:
    branches:
      - 'main'
      - 'dev'
      - 'release/*'
  workflow_dispatch:
  
# Define the image tag
# The IMAGE_TAG must be lowercase the ,, converts chars to lowercase
env:
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.event.repository.name }}
  USER_NAME: ${{ github.actor }}
  ORG_NAME: ${{ github.repository_owner }}
  VERSION: "latest"
  IMAGE_TAG: ${REGISTRY,,}"/"${ORG_NAME,,}"/"${REPO_NAME,,}":"${VERSION,,}
  
jobs:
  variable_substitution:
    runs-on: ubuntu-22.04
    outputs:
      image: ${{ steps.set_image.outputs.image }}
    steps:
    - id: set_image
      run: echo "image=${{env.IMAGE_TAG}}" >> $GITHUB_OUTPUT
      
  build:
    needs: variable_substitution
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: read
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3.0.0
      with:
        registry: ${{env.REGISTRY}}
        username: ${ORG_NAME,,}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Check if image exists
      id: imageExists
      run: docker pull ${{needs.variable_substitution.outputs.image}}
      continue-on-error : true
    - name: If Docker image doesnt exist build it
      if: steps.imageExists.outcome == 'failure'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{needs.variable_substitution.outputs.image}}
        secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}

  compile:
    needs: [variable_substitution, build]
    runs-on: ubuntu-22.04
    container:
      image: ${{needs.variable_substitution.outputs.image}}
      credentials:
        username: ${ORG_NAME,,}
        password: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      packages: write
      contents: read
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: set up env var
      run: echo "GIT_TAG=$(git describe --tags)" >> $GITHUB_ENV
      shell: bash
      
    - name: Run the Makefile and Build the Project
      run: make GIT_TAG=${{ env.GIT_TAG }}
      
    - name: Create Artifacts
      uses: actions/upload-artifact@v3.1.2
      with:
        name: build_files_${{ env.GIT_TAG }}
        path: |
          ./*.elf
          ./*.hex
        retention-days: 7
        if-no-files-found: error
