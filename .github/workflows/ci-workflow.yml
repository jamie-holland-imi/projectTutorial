name: CI CD Workflow

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:
  
# The IMAGE_TAG sets the docker image name, it must be lowercase the ,, convert to lowercase
env:
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.event.repository.name }}
  USER_NAME: ${{ github.actor }}
  VERSION: "latest"
  IMAGE_TAG: ${REGISTRY,,}"/"${USER_NAME,,}"/"${REPO_NAME,,}":"${VERSION,,}
  #example result: IMAGE_TAG: ghcr.io/jamie-holland-imi/project-name:latest

jobs:       
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: Check if dockerfile changed
      run: |
        echo ${{env.VERSION}}
        find ./ -name 'Dockerfile' | while read filename; 
          do unixtime=$(git log -1 --format="%at" -- "${filename}"); 
          touchtime=$(date -d @$unixtime +'%Y%m%d%H%M.%S'); 
          echo "${touchtime}";
          echo "env.VERSION=${touchtime}" >> $GITHUB_ENV
        done
        echo ${{env.VERSION}}
        
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2.2.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: If Docker image doesnt exist build it
      run: |
        if [ -n "$(docker images -q ${{env.IMAGE_TAG}})" ]; then
          docker build . --file Dockerfile --tag ${{env.IMAGE_TAG}}
          docker run ${{env.IMAGE_TAG}}
          docker push ${{env.IMAGE_TAG}}
          echo "The image: " ${{env.IMAGE_TAG}} " has been created"
        else
          echo "The image: " ${{env.IMAGE_TAG}} " already exists"
        fi

  variable_substitution:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      image: ${{ steps.set_image.outputs.image }}
    steps:
      - id: set_image
        run: echo "image=${{env.IMAGE_TAG}}" >> $GITHUB_OUTPUT

  compile:
    needs: variable_substitution
    runs-on: ubuntu-latest
    container:
      image: ${{ needs.variable_substitution.outputs.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Run the Makefile and Build the Project
        run: |
          make
          ls
          
      - name: Create Artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: build_files
          path: |
            ./*.elf
            ./*.hex
          retention-days: 7
          if-no-files-found: error
