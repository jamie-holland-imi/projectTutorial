name: CI CD Workflow

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:
  
# The IMAGE_TAG sets the docker image name, it must be lowercase the ,, convert to lowercase
env:
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.event.repository.name }}
  USER_NAME: ${{ github.actor }}
  VERSION: "latest"
  IMAGE_TAG: ${REGISTRY,,}"/"${USER_NAME,,}"/"${REPO_NAME,,}":"${VERSION,,}

jobs:
  variable_substitution:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set_image.outputs.image }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: Adds Dockerfile Version to Image Tag
      run: |
        find ./ -name 'Dockerfile' | while read filename; 
          do unixtime=$(git log -1 --format="%at" -- "${filename}"); 
          touchtime=$(date -d @$unixtime +'%Y%m%d%H%M.%S'); 
          echo "VERSION='${touchtime}'" >> $GITHUB_ENV;
        done
    - run: |
        echo "The image " ${{env.IMAGE_TAG}}
        echo git log ./ Dockerfile
    - id: set_image
      run: echo "image=${{env.IMAGE_TAG}}" >> $GITHUB_OUTPUT
      
  build:
    needs: variable_substitution
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2.2.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: If Docker image doesnt exist build it
      run: |
        if docker image inspect --tag ${{needs.variable_substitution.outputs.image}} >/dev/null 2>&1; then
          echo "The image " ${{needs.variable_substitution.outputs.image}} " already exists"
        else
          docker build . --file Dockerfile --tag ${{needs.variable_substitution.outputs.image}}
          docker run ${{needs.variable_substitution.outputs.image}}
          docker push ${{needs.variable_substitution.outputs.image}}
          echo "The image " ${{needs.variable_substitution.outputs.image}}} " has been created"
        fi
      
  compile:
    needs: [variable_substitution, build]
    runs-on: ubuntu-latest
    container:
      image: ${{needs.variable_substitution.outputs.image}}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      packages: write
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3
      
    - name: Run the Makefile and Build the Project
      run: |
        make
        ls
        
    - name: Create Artifacts
      uses: actions/upload-artifact@v3.1.2
      with:
        name: build_files
        path: |
          ./*.elf
          ./*.hex
        retention-days: 7
        if-no-files-found: error
