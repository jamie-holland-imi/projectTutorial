name: "Static Analysis"

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
# Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:
  
env:
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.event.repository.name }}
  USER_NAME: ${{ github.actor }}
  VERSION: "latest"
  IMAGE_TAG: ${REGISTRY,,}"/"${USER_NAME,,}"/"${REPO_NAME,,}":"${VERSION,,}
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  variable_substitution:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set_image.outputs.image }}
    steps:
      - id: set_image
        run: echo "image=${{env.IMAGE_TAG}}" >> $GITHUB_OUTPUT
        
  analyze:
    name: Analyze
    runs-on: ubuntu-latest    
    needs: variable_substitution
    container:
      image: ${{ needs.variable_substitution.outputs.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read
    steps:
# Checks out your repository under $GITHUB_WORKSPACE, so that your job can access it.
    - name: Checkout repository
      uses: actions/checkout@v3
      
# Builds your Make project using 'cpptesttrace' to collect input data for code analysis.
    - name: Build project
      run: | 
        cpptesttrace make
        apt-get install -y clang-format
        git config --system --add safe.directory '*'
# Runs code analysis with C/C++test.
    - name: Run C test
      uses: parasoft/run-cpptest-action@2.0.1
      with:
        input: build/compile_commands.json
        testConfig: 'builtin://MISRA C 2012'
        compilerConfig: 'clang_10_0'
        
# Uploads analysis results in the SARIF format, so that they are displayed as GitHub code scanning alerts.
    - name: Upload results (SARIF)
      if: always()
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: reports/report.sarif

# Uploads an archive that includes all report files (.xml, .html, .sarif).
    - name: Archive reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: CpptestReports
        path: reports/*.*

#    - name: Run linters
#      uses: wearerequired/lint-action@v2.3.0
#      with:
#        clang_format: true
#        working-directory:: ./Core/Src/
