name: "Static Analysis"

on:
  push:
    branches:
      - 'dev'
  pull_request:
    branches:
      - 'dev'
# Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:
  
env:
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.event.repository.name }}
  USER_NAME: ${{ github.actor }}
  VERSION: "latest"
  IMAGE_TAG: ${REGISTRY,,}"/"${USER_NAME,,}"/"${REPO_NAME,,}":"${VERSION,,}
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  variable_substitution:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set_image.outputs.image }}
    steps:
      - id: set_image
        run: echo "image=${{env.IMAGE_TAG}}" >> $GITHUB_OUTPUT
        
  analyze:
    name: Analyze
    runs-on: ubuntu-latest    
    needs: variable_substitution
    container:
      image: ${{ needs.variable_substitution.outputs.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read
    steps:
# Checks out your repository under $GITHUB_WORKSPACE, so that your job can access it.
    - uses: actions/checkout@v3
    - name: install cppcheck
      run: |
        wget -O cppcheck.tar.gz "https://sourceforge.net/projects/cppcheck/files/cppcheck/2.12/cppcheck-2.12.0.tar.gz" --no-check-certificate
        # unpack the archive to a neatly named target directory
        mkdir cppcheck
        tar xf cppcheck.tar.gz -C cppcheck --strip-components 1
        cd /cppcheck/build
        cmake ..
        cmake --build . -- -j16
        make install
        cd /
        # remove the archive
        rm cppcheck.tar.gz
        cppcheck --version


#    - name: Initialize CodeQL
#      uses: github/codeql-action/init@v2
#      with:
#        languages: ${{ matrix.language }}
#
#    - name: Perform CodeQL Analysis
#      uses: github/codeql-action/analyze@v2
#        
#    - name: Install ClangFormat
#      run: | 
#        apt-get install -y clang-format
#        git config --global --add safe.directory /__w/projectTutorial/projectTutorial
#        
#    - name: Run linters
#      uses: wearerequired/lint-action@v2.3.0
#      with:
#        clang_format: true
#        stylelint: true
